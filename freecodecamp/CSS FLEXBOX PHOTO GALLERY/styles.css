* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}

.gallery img {
    width: 100%;        /* tamanho da imagem de 100% (original) */
    max-width: 350px;   /* imagens encolhem conforme tamanho da tela, mas, não muito */
    height: 300px;      /* mantém as imagens em tamanho uniforme */
    object-fit: cover;  /*  Isto informará a imagem que ela deve preencher o contêiner img enquanto mantém a proporção, resultando em um corte para o ajuste */
    border-radius: 10px;    /* arredondar cantos. suavizar imagens */
}

.gallery {
    display: flex;  /*  layout de CSS unidimensional que pode controlar a forma como os itens são espaçados e alinhados dentro de um contêiner. */
    flex-direction: row; /* direção= esquerda p direita, baixo para cima e vice-versa */
    flex-wrap: wrap;    /* determina como os itens flex se comportam quando o contêiner flex for muito pequeno. Defini-la como wrap permitirá que os itens sejam associados à próxima linha ou coluna. */
    justify-content: center;    /* determina como os itens dentro de um contêiner flex são posicionados no eixo principal, afetando a posição e o espaço ao seu redor*/
    align-items: center;    /* posiciona o conteúdo do flex ao longo do eixo transversal. nesse caso, centraliza as imagens na vertical */
    padding: 20px 10px;    /* criar algum espaço em torno do contêiner. */
    max-width: 1400px;
    margin: 0 auto;             /* para centralizar */
    gap: 16px;  /* define as lacunas (gaps), também conhecidas como calhas, entre as linhas e as colunas. A propriedade gap e suas subpropriedades row-gap e column-gap fornecem essa funcionalidade para layouts flex, grid e multicolunas. Você aplica a propriedade ao elemento contêiner. */
}

.gallery::after {
    content: "";    /* cria um elemento que é o último filho do elemento selecionado. Você pode usá-lo para adicionar um elemento vazio após a última imagem.Se você der a esse elemento a mesma width das imagens, ele empurrará a última imagem para a esquerda quando a galeria estiver em um layout de duas colunas */
    width: 350px;
}

.header {       /* aqui é o texto h1 */
    text-align: center;             /* alinhas no centro */
    text-transform: uppercase;      /* colocar texto com letras maiúsculas */
    padding: 32px;                  /* espaçamento */
    background-color: #0a0a23;    /* cor de fundo */
    color: #fff;                  /* cor da fonte */
    border-bottom: 4px solid #fdb347;  /* borda apenas na parte inferior */
}